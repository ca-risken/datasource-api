syntax = "proto3";

package datasource.azure;
option go_package = "github.com/ca-risken/datasource-api/proto/azure";

import "azure/entity.proto";
import "validate/validate.proto";

service AzureService {
  // Azure DataSource
  rpc ListAzureDataSource(ListAzureDataSourceRequest)
      returns (ListAzureDataSourceResponse);

  // Azure
  rpc ListAzure(ListAzureRequest) returns (ListAzureResponse);
  rpc GetAzure(GetAzureRequest) returns (GetAzureResponse);
  rpc PutAzure(PutAzureRequest) returns (PutAzureResponse);
  rpc DeleteAzure(DeleteAzureRequest) returns (Empty);

  // Rel Azure DataSource
  rpc ListRelAzureDataSource(ListRelAzureDataSourceRequest)
      returns (ListRelAzureDataSourceResponse);
  rpc GetRelAzureDataSource(GetRelAzureDataSourceRequest)
      returns (GetRelAzureDataSourceResponse);
  rpc AttachRelAzureDataSource(AttachRelAzureDataSourceRequest)
      returns (AttachRelAzureDataSourceResponse);
  rpc DetachRelAzureDataSource(DetachRelAzureDataSourceRequest) returns (Empty);

  // Scan
  rpc InvokeScanAzure(InvokeScanAzureRequest) returns (Empty); // For ondeamnd
  rpc InvokeScanAll(InvokeScanAllRequest) returns (Empty);     // For scheduled
}

message ListAzureDataSourceRequest {
  uint32 azure_data_source_id = 1;
  string name = 2 [ (validate.rules).string = {min_len : 0, max_len : 64} ];
}

message ListAzureDataSourceResponse {
  repeated AzureDataSource azure_data_source = 1;
}

message ListAzureRequest {
  uint32 project_id = 1 [ (validate.rules).uint32.gt = 0 ];
  uint32 azure_id = 2;
  string subscription_id = 3
      [ (validate.rules).string = {min_len : 0, max_len : 128} ];
}

message ListAzureResponse { repeated Azure azure = 1; }

message GetAzureRequest {
  uint32 project_id = 1 [ (validate.rules).uint32.gt = 0 ];
  uint32 azure_id = 2 [ (validate.rules).uint32.gt = 0 ];
}

message GetAzureResponse { Azure azure = 1; }

message PutAzureRequest {
  uint32 project_id = 1 [ (validate.rules).uint32.gt = 0 ];
  AzureForUpsert azure = 2 [ (validate.rules).message.required = true ];
}

message PutAzureResponse { Azure azure = 1; }

message DeleteAzureRequest {
  uint32 project_id = 1 [ (validate.rules).uint32.gt = 0 ];
  uint32 azure_id = 2 [ (validate.rules).uint32.gt = 0 ];
}

message ListRelAzureDataSourceRequest {
  uint32 project_id = 1 [ (validate.rules).uint32.gt = 0 ];
  uint32 azure_id = 2;
}

message ListRelAzureDataSourceResponse {
  repeated RelAzureDataSource rel_azure_data_source = 1;
}

message GetRelAzureDataSourceRequest {
  uint32 project_id = 1 [ (validate.rules).uint32.gt = 0 ];
  uint32 azure_id = 2 [ (validate.rules).uint32.gt = 0 ];
  uint32 azure_data_source_id = 3 [ (validate.rules).uint32.gt = 0 ];
}

message GetRelAzureDataSourceResponse {
  RelAzureDataSource rel_azure_data_source = 1;
}

message AttachRelAzureDataSourceRequest {
  uint32 project_id = 1 [ (validate.rules).uint32.gt = 0 ];
  RelAzureDataSourceForUpsert rel_azure_data_source = 2
      [ (validate.rules).message.required = true ];
}

message AttachRelAzureDataSourceResponse {
  RelAzureDataSource rel_azure_data_source = 1;
}

message DetachRelAzureDataSourceRequest {
  uint32 project_id = 1 [ (validate.rules).uint32.gt = 0 ];
  uint32 azure_id = 2 [ (validate.rules).uint32.gt = 0 ];
  uint32 azure_data_source_id = 3 [ (validate.rules).uint32.gt = 0 ];
}

message InvokeScanAzureRequest {
  uint32 project_id = 1 [ (validate.rules).uint32.gt = 0 ];
  uint32 azure_id = 2 [ (validate.rules).uint32.gt = 0 ];
  uint32 azure_data_source_id = 3 [ (validate.rules).uint32.gt = 0 ];
  bool scan_only = 4;
}

message InvokeScanAllRequest { uint32 azure_data_source_id = 1; }
