// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v5.29.3
// source: azure/service.proto

package azure

import (
	context "context"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListAzureDataSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AzureDataSourceId uint32 `protobuf:"varint,1,opt,name=azure_data_source_id,json=azureDataSourceId,proto3" json:"azure_data_source_id,omitempty"`
	Name              string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ListAzureDataSourceRequest) Reset() {
	*x = ListAzureDataSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_azure_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAzureDataSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAzureDataSourceRequest) ProtoMessage() {}

func (x *ListAzureDataSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_azure_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAzureDataSourceRequest.ProtoReflect.Descriptor instead.
func (*ListAzureDataSourceRequest) Descriptor() ([]byte, []int) {
	return file_azure_service_proto_rawDescGZIP(), []int{0}
}

func (x *ListAzureDataSourceRequest) GetAzureDataSourceId() uint32 {
	if x != nil {
		return x.AzureDataSourceId
	}
	return 0
}

func (x *ListAzureDataSourceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListAzureDataSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AzureDataSource []*AzureDataSource `protobuf:"bytes,1,rep,name=azure_data_source,json=azureDataSource,proto3" json:"azure_data_source,omitempty"`
}

func (x *ListAzureDataSourceResponse) Reset() {
	*x = ListAzureDataSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_azure_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAzureDataSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAzureDataSourceResponse) ProtoMessage() {}

func (x *ListAzureDataSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_azure_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAzureDataSourceResponse.ProtoReflect.Descriptor instead.
func (*ListAzureDataSourceResponse) Descriptor() ([]byte, []int) {
	return file_azure_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListAzureDataSourceResponse) GetAzureDataSource() []*AzureDataSource {
	if x != nil {
		return x.AzureDataSource
	}
	return nil
}

type ListAzureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId      uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AzureId        uint32 `protobuf:"varint,2,opt,name=azure_id,json=azureId,proto3" json:"azure_id,omitempty"`
	SubscriptionId string `protobuf:"bytes,3,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
}

func (x *ListAzureRequest) Reset() {
	*x = ListAzureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_azure_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAzureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAzureRequest) ProtoMessage() {}

func (x *ListAzureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_azure_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAzureRequest.ProtoReflect.Descriptor instead.
func (*ListAzureRequest) Descriptor() ([]byte, []int) {
	return file_azure_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListAzureRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListAzureRequest) GetAzureId() uint32 {
	if x != nil {
		return x.AzureId
	}
	return 0
}

func (x *ListAzureRequest) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

type ListAzureResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Azure []*Azure `protobuf:"bytes,1,rep,name=azure,proto3" json:"azure,omitempty"`
}

func (x *ListAzureResponse) Reset() {
	*x = ListAzureResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_azure_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAzureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAzureResponse) ProtoMessage() {}

func (x *ListAzureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_azure_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAzureResponse.ProtoReflect.Descriptor instead.
func (*ListAzureResponse) Descriptor() ([]byte, []int) {
	return file_azure_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListAzureResponse) GetAzure() []*Azure {
	if x != nil {
		return x.Azure
	}
	return nil
}

type GetAzureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AzureId   uint32 `protobuf:"varint,2,opt,name=azure_id,json=azureId,proto3" json:"azure_id,omitempty"`
}

func (x *GetAzureRequest) Reset() {
	*x = GetAzureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_azure_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAzureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAzureRequest) ProtoMessage() {}

func (x *GetAzureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_azure_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAzureRequest.ProtoReflect.Descriptor instead.
func (*GetAzureRequest) Descriptor() ([]byte, []int) {
	return file_azure_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetAzureRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *GetAzureRequest) GetAzureId() uint32 {
	if x != nil {
		return x.AzureId
	}
	return 0
}

type GetAzureResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Azure *Azure `protobuf:"bytes,1,opt,name=azure,proto3" json:"azure,omitempty"`
}

func (x *GetAzureResponse) Reset() {
	*x = GetAzureResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_azure_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAzureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAzureResponse) ProtoMessage() {}

func (x *GetAzureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_azure_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAzureResponse.ProtoReflect.Descriptor instead.
func (*GetAzureResponse) Descriptor() ([]byte, []int) {
	return file_azure_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetAzureResponse) GetAzure() *Azure {
	if x != nil {
		return x.Azure
	}
	return nil
}

type PutAzureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint32          `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Azure     *AzureForUpsert `protobuf:"bytes,2,opt,name=azure,proto3" json:"azure,omitempty"`
}

func (x *PutAzureRequest) Reset() {
	*x = PutAzureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_azure_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutAzureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutAzureRequest) ProtoMessage() {}

func (x *PutAzureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_azure_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutAzureRequest.ProtoReflect.Descriptor instead.
func (*PutAzureRequest) Descriptor() ([]byte, []int) {
	return file_azure_service_proto_rawDescGZIP(), []int{6}
}

func (x *PutAzureRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *PutAzureRequest) GetAzure() *AzureForUpsert {
	if x != nil {
		return x.Azure
	}
	return nil
}

type PutAzureResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Azure *Azure `protobuf:"bytes,1,opt,name=azure,proto3" json:"azure,omitempty"`
}

func (x *PutAzureResponse) Reset() {
	*x = PutAzureResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_azure_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutAzureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutAzureResponse) ProtoMessage() {}

func (x *PutAzureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_azure_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutAzureResponse.ProtoReflect.Descriptor instead.
func (*PutAzureResponse) Descriptor() ([]byte, []int) {
	return file_azure_service_proto_rawDescGZIP(), []int{7}
}

func (x *PutAzureResponse) GetAzure() *Azure {
	if x != nil {
		return x.Azure
	}
	return nil
}

type DeleteAzureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AzureId   uint32 `protobuf:"varint,2,opt,name=azure_id,json=azureId,proto3" json:"azure_id,omitempty"`
}

func (x *DeleteAzureRequest) Reset() {
	*x = DeleteAzureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_azure_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAzureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAzureRequest) ProtoMessage() {}

func (x *DeleteAzureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_azure_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAzureRequest.ProtoReflect.Descriptor instead.
func (*DeleteAzureRequest) Descriptor() ([]byte, []int) {
	return file_azure_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteAzureRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *DeleteAzureRequest) GetAzureId() uint32 {
	if x != nil {
		return x.AzureId
	}
	return 0
}

type ListRelAzureDataSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AzureId   uint32 `protobuf:"varint,2,opt,name=azure_id,json=azureId,proto3" json:"azure_id,omitempty"`
}

func (x *ListRelAzureDataSourceRequest) Reset() {
	*x = ListRelAzureDataSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_azure_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRelAzureDataSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRelAzureDataSourceRequest) ProtoMessage() {}

func (x *ListRelAzureDataSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_azure_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRelAzureDataSourceRequest.ProtoReflect.Descriptor instead.
func (*ListRelAzureDataSourceRequest) Descriptor() ([]byte, []int) {
	return file_azure_service_proto_rawDescGZIP(), []int{9}
}

func (x *ListRelAzureDataSourceRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListRelAzureDataSourceRequest) GetAzureId() uint32 {
	if x != nil {
		return x.AzureId
	}
	return 0
}

type ListRelAzureDataSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelAzureDataSource []*RelAzureDataSource `protobuf:"bytes,1,rep,name=rel_azure_data_source,json=relAzureDataSource,proto3" json:"rel_azure_data_source,omitempty"`
}

func (x *ListRelAzureDataSourceResponse) Reset() {
	*x = ListRelAzureDataSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_azure_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRelAzureDataSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRelAzureDataSourceResponse) ProtoMessage() {}

func (x *ListRelAzureDataSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_azure_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRelAzureDataSourceResponse.ProtoReflect.Descriptor instead.
func (*ListRelAzureDataSourceResponse) Descriptor() ([]byte, []int) {
	return file_azure_service_proto_rawDescGZIP(), []int{10}
}

func (x *ListRelAzureDataSourceResponse) GetRelAzureDataSource() []*RelAzureDataSource {
	if x != nil {
		return x.RelAzureDataSource
	}
	return nil
}

type GetRelAzureDataSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId         uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AzureId           uint32 `protobuf:"varint,2,opt,name=azure_id,json=azureId,proto3" json:"azure_id,omitempty"`
	AzureDataSourceId uint32 `protobuf:"varint,3,opt,name=azure_data_source_id,json=azureDataSourceId,proto3" json:"azure_data_source_id,omitempty"`
}

func (x *GetRelAzureDataSourceRequest) Reset() {
	*x = GetRelAzureDataSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_azure_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRelAzureDataSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRelAzureDataSourceRequest) ProtoMessage() {}

func (x *GetRelAzureDataSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_azure_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRelAzureDataSourceRequest.ProtoReflect.Descriptor instead.
func (*GetRelAzureDataSourceRequest) Descriptor() ([]byte, []int) {
	return file_azure_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetRelAzureDataSourceRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *GetRelAzureDataSourceRequest) GetAzureId() uint32 {
	if x != nil {
		return x.AzureId
	}
	return 0
}

func (x *GetRelAzureDataSourceRequest) GetAzureDataSourceId() uint32 {
	if x != nil {
		return x.AzureDataSourceId
	}
	return 0
}

type GetRelAzureDataSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelAzureDataSource *RelAzureDataSource `protobuf:"bytes,1,opt,name=rel_azure_data_source,json=relAzureDataSource,proto3" json:"rel_azure_data_source,omitempty"`
}

func (x *GetRelAzureDataSourceResponse) Reset() {
	*x = GetRelAzureDataSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_azure_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRelAzureDataSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRelAzureDataSourceResponse) ProtoMessage() {}

func (x *GetRelAzureDataSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_azure_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRelAzureDataSourceResponse.ProtoReflect.Descriptor instead.
func (*GetRelAzureDataSourceResponse) Descriptor() ([]byte, []int) {
	return file_azure_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetRelAzureDataSourceResponse) GetRelAzureDataSource() *RelAzureDataSource {
	if x != nil {
		return x.RelAzureDataSource
	}
	return nil
}

type AttachRelAzureDataSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId          uint32                       `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	RelAzureDataSource *RelAzureDataSourceForUpsert `protobuf:"bytes,2,opt,name=rel_azure_data_source,json=relAzureDataSource,proto3" json:"rel_azure_data_source,omitempty"`
}

func (x *AttachRelAzureDataSourceRequest) Reset() {
	*x = AttachRelAzureDataSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_azure_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachRelAzureDataSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachRelAzureDataSourceRequest) ProtoMessage() {}

func (x *AttachRelAzureDataSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_azure_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachRelAzureDataSourceRequest.ProtoReflect.Descriptor instead.
func (*AttachRelAzureDataSourceRequest) Descriptor() ([]byte, []int) {
	return file_azure_service_proto_rawDescGZIP(), []int{13}
}

func (x *AttachRelAzureDataSourceRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *AttachRelAzureDataSourceRequest) GetRelAzureDataSource() *RelAzureDataSourceForUpsert {
	if x != nil {
		return x.RelAzureDataSource
	}
	return nil
}

type AttachRelAzureDataSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelAzureDataSource *RelAzureDataSource `protobuf:"bytes,1,opt,name=rel_azure_data_source,json=relAzureDataSource,proto3" json:"rel_azure_data_source,omitempty"`
}

func (x *AttachRelAzureDataSourceResponse) Reset() {
	*x = AttachRelAzureDataSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_azure_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachRelAzureDataSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachRelAzureDataSourceResponse) ProtoMessage() {}

func (x *AttachRelAzureDataSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_azure_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachRelAzureDataSourceResponse.ProtoReflect.Descriptor instead.
func (*AttachRelAzureDataSourceResponse) Descriptor() ([]byte, []int) {
	return file_azure_service_proto_rawDescGZIP(), []int{14}
}

func (x *AttachRelAzureDataSourceResponse) GetRelAzureDataSource() *RelAzureDataSource {
	if x != nil {
		return x.RelAzureDataSource
	}
	return nil
}

type DetachRelAzureDataSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId         uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AzureId           uint32 `protobuf:"varint,2,opt,name=azure_id,json=azureId,proto3" json:"azure_id,omitempty"`
	AzureDataSourceId uint32 `protobuf:"varint,3,opt,name=azure_data_source_id,json=azureDataSourceId,proto3" json:"azure_data_source_id,omitempty"`
}

func (x *DetachRelAzureDataSourceRequest) Reset() {
	*x = DetachRelAzureDataSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_azure_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetachRelAzureDataSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetachRelAzureDataSourceRequest) ProtoMessage() {}

func (x *DetachRelAzureDataSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_azure_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetachRelAzureDataSourceRequest.ProtoReflect.Descriptor instead.
func (*DetachRelAzureDataSourceRequest) Descriptor() ([]byte, []int) {
	return file_azure_service_proto_rawDescGZIP(), []int{15}
}

func (x *DetachRelAzureDataSourceRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *DetachRelAzureDataSourceRequest) GetAzureId() uint32 {
	if x != nil {
		return x.AzureId
	}
	return 0
}

func (x *DetachRelAzureDataSourceRequest) GetAzureDataSourceId() uint32 {
	if x != nil {
		return x.AzureDataSourceId
	}
	return 0
}

type InvokeScanAzureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId         uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AzureId           uint32 `protobuf:"varint,2,opt,name=azure_id,json=azureId,proto3" json:"azure_id,omitempty"`
	AzureDataSourceId uint32 `protobuf:"varint,3,opt,name=azure_data_source_id,json=azureDataSourceId,proto3" json:"azure_data_source_id,omitempty"`
	ScanOnly          bool   `protobuf:"varint,4,opt,name=scan_only,json=scanOnly,proto3" json:"scan_only,omitempty"`
}

func (x *InvokeScanAzureRequest) Reset() {
	*x = InvokeScanAzureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_azure_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeScanAzureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeScanAzureRequest) ProtoMessage() {}

func (x *InvokeScanAzureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_azure_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeScanAzureRequest.ProtoReflect.Descriptor instead.
func (*InvokeScanAzureRequest) Descriptor() ([]byte, []int) {
	return file_azure_service_proto_rawDescGZIP(), []int{16}
}

func (x *InvokeScanAzureRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *InvokeScanAzureRequest) GetAzureId() uint32 {
	if x != nil {
		return x.AzureId
	}
	return 0
}

func (x *InvokeScanAzureRequest) GetAzureDataSourceId() uint32 {
	if x != nil {
		return x.AzureDataSourceId
	}
	return 0
}

func (x *InvokeScanAzureRequest) GetScanOnly() bool {
	if x != nil {
		return x.ScanOnly
	}
	return false
}

type InvokeScanAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AzureDataSourceId uint32 `protobuf:"varint,1,opt,name=azure_data_source_id,json=azureDataSourceId,proto3" json:"azure_data_source_id,omitempty"`
}

func (x *InvokeScanAllRequest) Reset() {
	*x = InvokeScanAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_azure_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeScanAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeScanAllRequest) ProtoMessage() {}

func (x *InvokeScanAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_azure_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeScanAllRequest.ProtoReflect.Descriptor instead.
func (*InvokeScanAllRequest) Descriptor() ([]byte, []int) {
	return file_azure_service_proto_rawDescGZIP(), []int{17}
}

func (x *InvokeScanAllRequest) GetAzureDataSourceId() uint32 {
	if x != nil {
		return x.AzureDataSourceId
	}
	return 0
}

var File_azure_service_proto protoreflect.FileDescriptor

var file_azure_service_proto_rawDesc = []byte{
	0x0a, 0x13, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x1a, 0x12, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x2f, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6c, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x7a, 0x75, 0x72,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2f, 0x0a, 0x14, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x11, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x00, 0x18, 0x40, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x6c, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4d, 0x0a, 0x11, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x2e,
	0x41, 0x7a, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x0f, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x22, 0x8a, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02,
	0x20, 0x00, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x00, 0x18, 0x80, 0x01, 0x52, 0x0e, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x42, 0x0a,
	0x11, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x61,
	0x7a, 0x75, 0x72, 0x65, 0x2e, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x52, 0x05, 0x61, 0x7a, 0x75, 0x72,
	0x65, 0x22, 0x5d, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20,
	0x00, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x08,
	0x61, 0x7a, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x07, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x49, 0x64,
	0x22, 0x41, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x2e, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x52, 0x05, 0x61, 0x7a,
	0x75, 0x72, 0x65, 0x22, 0x7b, 0x0a, 0x0f, 0x50, 0x75, 0x74, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a,
	0x02, 0x20, 0x00, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x40,
	0x0a, 0x05, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x61, 0x7a, 0x75, 0x72, 0x65,
	0x2e, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x46, 0x6f, 0x72, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x05, 0x61, 0x7a, 0x75, 0x72, 0x65,
	0x22, 0x41, 0x0a, 0x10, 0x50, 0x75, 0x74, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x2e, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x52, 0x05, 0x61, 0x7a,
	0x75, 0x72, 0x65, 0x22, 0x60, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x7a, 0x75,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x08, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x07, 0x61, 0x7a,
	0x75, 0x72, 0x65, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c,
	0x41, 0x7a, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a,
	0x02, 0x20, 0x00, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x49, 0x64, 0x22, 0x79, 0x0a, 0x1e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x6c, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x15, 0x72,
	0x65, 0x6c, 0x5f, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x2e, 0x52, 0x65,
	0x6c, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x12, 0x72, 0x65, 0x6c, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x22, 0xa4, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x41,
	0x7a, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02,
	0x20, 0x00, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a,
	0x08, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x07, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x49,
	0x64, 0x12, 0x38, 0x0a, 0x14, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x11, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x78, 0x0a, 0x1d, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x6c, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x15,
	0x72, 0x65, 0x6c, 0x5f, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x2e, 0x52,
	0x65, 0x6c, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x12, 0x72, 0x65, 0x6c, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xb5, 0x01, 0x0a, 0x1f, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x52, 0x65, 0x6c, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x6a, 0x0a, 0x15, 0x72, 0x65, 0x6c, 0x5f, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x61, 0x7a,
	0x75, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x6c, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x6f, 0x72, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x12, 0x72, 0x65, 0x6c, 0x41, 0x7a,
	0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x7b, 0x0a,
	0x20, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x52, 0x65, 0x6c, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x57, 0x0a, 0x15, 0x72, 0x65, 0x6c, 0x5f, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x61, 0x7a,
	0x75, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x6c, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x12, 0x72, 0x65, 0x6c, 0x41, 0x7a, 0x75, 0x72, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xa7, 0x01, 0x0a, 0x1f, 0x44,
	0x65, 0x74, 0x61, 0x63, 0x68, 0x52, 0x65, 0x6c, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x08, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20,
	0x00, 0x52, 0x07, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x14, 0x61, 0x7a,
	0x75, 0x72, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20,
	0x00, 0x52, 0x11, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x64, 0x22, 0xbb, 0x01, 0x0a, 0x16, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x53,
	0x63, 0x61, 0x6e, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x26, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x08, 0x61, 0x7a, 0x75, 0x72, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02,
	0x20, 0x00, 0x52, 0x07, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x14, 0x61,
	0x7a, 0x75, 0x72, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02,
	0x20, 0x00, 0x52, 0x11, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x6f, 0x6e,
	0x6c, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x63, 0x61, 0x6e, 0x4f, 0x6e,
	0x6c, 0x79, 0x22, 0x47, 0x0a, 0x14, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x53, 0x63, 0x61, 0x6e,
	0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x14, 0x61, 0x7a,
	0x75, 0x72, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x32, 0xd7, 0x08, 0x0a, 0x0c,
	0x41, 0x7a, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x72, 0x0a, 0x13,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x2c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x7a, 0x75, 0x72, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x61,
	0x7a, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x54, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x12, 0x22, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x61, 0x7a, 0x75, 0x72, 0x65,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x61,
	0x7a, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x41, 0x7a, 0x75,
	0x72, 0x65, 0x12, 0x21, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x61, 0x7a, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x7a, 0x75, 0x72,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x08, 0x50, 0x75, 0x74,
	0x41, 0x7a, 0x75, 0x72, 0x65, 0x12, 0x21, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x2e, 0x50, 0x75, 0x74, 0x41, 0x7a, 0x75, 0x72,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x2e, 0x50, 0x75, 0x74, 0x41,
	0x7a, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0b,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x12, 0x24, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x61,
	0x7a, 0x75, 0x72, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x7b, 0x0a, 0x16, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x6c, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x2f, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x41,
	0x7a, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x2e, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6c,
	0x41, 0x7a, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x78, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x6c, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x2e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x61, 0x7a,
	0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2f, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x61, 0x7a,
	0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x81, 0x01, 0x0a, 0x18, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x52, 0x65, 0x6c, 0x41,
	0x7a, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x31,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x61, 0x7a, 0x75, 0x72,
	0x65, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x52, 0x65, 0x6c, 0x41, 0x7a, 0x75, 0x72, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x32, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x61,
	0x7a, 0x75, 0x72, 0x65, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x52, 0x65, 0x6c, 0x41, 0x7a,
	0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x18, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x52,
	0x65, 0x6c, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x31, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x61,
	0x7a, 0x75, 0x72, 0x65, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x52, 0x65, 0x6c, 0x41, 0x7a,
	0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a,
	0x0f, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x41, 0x7a, 0x75, 0x72, 0x65,
	0x12, 0x28, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x61, 0x7a,
	0x75, 0x72, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x41, 0x7a,
	0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x50, 0x0a, 0x0d, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x53, 0x63, 0x61,
	0x6e, 0x41, 0x6c, 0x6c, 0x12, 0x26, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x53, 0x63,
	0x61, 0x6e, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x61, 0x2d, 0x72, 0x69, 0x73, 0x6b, 0x65, 0x6e, 0x2f, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_azure_service_proto_rawDescOnce sync.Once
	file_azure_service_proto_rawDescData = file_azure_service_proto_rawDesc
)

func file_azure_service_proto_rawDescGZIP() []byte {
	file_azure_service_proto_rawDescOnce.Do(func() {
		file_azure_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_azure_service_proto_rawDescData)
	})
	return file_azure_service_proto_rawDescData
}

var file_azure_service_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_azure_service_proto_goTypes = []interface{}{
	(*ListAzureDataSourceRequest)(nil),       // 0: datasource.azure.ListAzureDataSourceRequest
	(*ListAzureDataSourceResponse)(nil),      // 1: datasource.azure.ListAzureDataSourceResponse
	(*ListAzureRequest)(nil),                 // 2: datasource.azure.ListAzureRequest
	(*ListAzureResponse)(nil),                // 3: datasource.azure.ListAzureResponse
	(*GetAzureRequest)(nil),                  // 4: datasource.azure.GetAzureRequest
	(*GetAzureResponse)(nil),                 // 5: datasource.azure.GetAzureResponse
	(*PutAzureRequest)(nil),                  // 6: datasource.azure.PutAzureRequest
	(*PutAzureResponse)(nil),                 // 7: datasource.azure.PutAzureResponse
	(*DeleteAzureRequest)(nil),               // 8: datasource.azure.DeleteAzureRequest
	(*ListRelAzureDataSourceRequest)(nil),    // 9: datasource.azure.ListRelAzureDataSourceRequest
	(*ListRelAzureDataSourceResponse)(nil),   // 10: datasource.azure.ListRelAzureDataSourceResponse
	(*GetRelAzureDataSourceRequest)(nil),     // 11: datasource.azure.GetRelAzureDataSourceRequest
	(*GetRelAzureDataSourceResponse)(nil),    // 12: datasource.azure.GetRelAzureDataSourceResponse
	(*AttachRelAzureDataSourceRequest)(nil),  // 13: datasource.azure.AttachRelAzureDataSourceRequest
	(*AttachRelAzureDataSourceResponse)(nil), // 14: datasource.azure.AttachRelAzureDataSourceResponse
	(*DetachRelAzureDataSourceRequest)(nil),  // 15: datasource.azure.DetachRelAzureDataSourceRequest
	(*InvokeScanAzureRequest)(nil),           // 16: datasource.azure.InvokeScanAzureRequest
	(*InvokeScanAllRequest)(nil),             // 17: datasource.azure.InvokeScanAllRequest
	(*AzureDataSource)(nil),                  // 18: datasource.azure.AzureDataSource
	(*Azure)(nil),                            // 19: datasource.azure.Azure
	(*AzureForUpsert)(nil),                   // 20: datasource.azure.AzureForUpsert
	(*RelAzureDataSource)(nil),               // 21: datasource.azure.RelAzureDataSource
	(*RelAzureDataSourceForUpsert)(nil),      // 22: datasource.azure.RelAzureDataSourceForUpsert
	(*Empty)(nil),                            // 23: datasource.azure.Empty
}
var file_azure_service_proto_depIdxs = []int32{
	18, // 0: datasource.azure.ListAzureDataSourceResponse.azure_data_source:type_name -> datasource.azure.AzureDataSource
	19, // 1: datasource.azure.ListAzureResponse.azure:type_name -> datasource.azure.Azure
	19, // 2: datasource.azure.GetAzureResponse.azure:type_name -> datasource.azure.Azure
	20, // 3: datasource.azure.PutAzureRequest.azure:type_name -> datasource.azure.AzureForUpsert
	19, // 4: datasource.azure.PutAzureResponse.azure:type_name -> datasource.azure.Azure
	21, // 5: datasource.azure.ListRelAzureDataSourceResponse.rel_azure_data_source:type_name -> datasource.azure.RelAzureDataSource
	21, // 6: datasource.azure.GetRelAzureDataSourceResponse.rel_azure_data_source:type_name -> datasource.azure.RelAzureDataSource
	22, // 7: datasource.azure.AttachRelAzureDataSourceRequest.rel_azure_data_source:type_name -> datasource.azure.RelAzureDataSourceForUpsert
	21, // 8: datasource.azure.AttachRelAzureDataSourceResponse.rel_azure_data_source:type_name -> datasource.azure.RelAzureDataSource
	0,  // 9: datasource.azure.AzureService.ListAzureDataSource:input_type -> datasource.azure.ListAzureDataSourceRequest
	2,  // 10: datasource.azure.AzureService.ListAzure:input_type -> datasource.azure.ListAzureRequest
	4,  // 11: datasource.azure.AzureService.GetAzure:input_type -> datasource.azure.GetAzureRequest
	6,  // 12: datasource.azure.AzureService.PutAzure:input_type -> datasource.azure.PutAzureRequest
	8,  // 13: datasource.azure.AzureService.DeleteAzure:input_type -> datasource.azure.DeleteAzureRequest
	9,  // 14: datasource.azure.AzureService.ListRelAzureDataSource:input_type -> datasource.azure.ListRelAzureDataSourceRequest
	11, // 15: datasource.azure.AzureService.GetRelAzureDataSource:input_type -> datasource.azure.GetRelAzureDataSourceRequest
	13, // 16: datasource.azure.AzureService.AttachRelAzureDataSource:input_type -> datasource.azure.AttachRelAzureDataSourceRequest
	15, // 17: datasource.azure.AzureService.DetachRelAzureDataSource:input_type -> datasource.azure.DetachRelAzureDataSourceRequest
	16, // 18: datasource.azure.AzureService.InvokeScanAzure:input_type -> datasource.azure.InvokeScanAzureRequest
	17, // 19: datasource.azure.AzureService.InvokeScanAll:input_type -> datasource.azure.InvokeScanAllRequest
	1,  // 20: datasource.azure.AzureService.ListAzureDataSource:output_type -> datasource.azure.ListAzureDataSourceResponse
	3,  // 21: datasource.azure.AzureService.ListAzure:output_type -> datasource.azure.ListAzureResponse
	5,  // 22: datasource.azure.AzureService.GetAzure:output_type -> datasource.azure.GetAzureResponse
	7,  // 23: datasource.azure.AzureService.PutAzure:output_type -> datasource.azure.PutAzureResponse
	23, // 24: datasource.azure.AzureService.DeleteAzure:output_type -> datasource.azure.Empty
	10, // 25: datasource.azure.AzureService.ListRelAzureDataSource:output_type -> datasource.azure.ListRelAzureDataSourceResponse
	12, // 26: datasource.azure.AzureService.GetRelAzureDataSource:output_type -> datasource.azure.GetRelAzureDataSourceResponse
	14, // 27: datasource.azure.AzureService.AttachRelAzureDataSource:output_type -> datasource.azure.AttachRelAzureDataSourceResponse
	23, // 28: datasource.azure.AzureService.DetachRelAzureDataSource:output_type -> datasource.azure.Empty
	23, // 29: datasource.azure.AzureService.InvokeScanAzure:output_type -> datasource.azure.Empty
	23, // 30: datasource.azure.AzureService.InvokeScanAll:output_type -> datasource.azure.Empty
	20, // [20:31] is the sub-list for method output_type
	9,  // [9:20] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_azure_service_proto_init() }
func file_azure_service_proto_init() {
	if File_azure_service_proto != nil {
		return
	}
	file_azure_entity_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_azure_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAzureDataSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_azure_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAzureDataSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_azure_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAzureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_azure_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAzureResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_azure_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAzureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_azure_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAzureResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_azure_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutAzureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_azure_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutAzureResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_azure_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAzureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_azure_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRelAzureDataSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_azure_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRelAzureDataSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_azure_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRelAzureDataSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_azure_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRelAzureDataSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_azure_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachRelAzureDataSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_azure_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachRelAzureDataSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_azure_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetachRelAzureDataSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_azure_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeScanAzureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_azure_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeScanAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_azure_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_azure_service_proto_goTypes,
		DependencyIndexes: file_azure_service_proto_depIdxs,
		MessageInfos:      file_azure_service_proto_msgTypes,
	}.Build()
	File_azure_service_proto = out.File
	file_azure_service_proto_rawDesc = nil
	file_azure_service_proto_goTypes = nil
	file_azure_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AzureServiceClient is the client API for AzureService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AzureServiceClient interface {
	// Azure DataSource
	ListAzureDataSource(ctx context.Context, in *ListAzureDataSourceRequest, opts ...grpc.CallOption) (*ListAzureDataSourceResponse, error)
	// Azure
	ListAzure(ctx context.Context, in *ListAzureRequest, opts ...grpc.CallOption) (*ListAzureResponse, error)
	GetAzure(ctx context.Context, in *GetAzureRequest, opts ...grpc.CallOption) (*GetAzureResponse, error)
	PutAzure(ctx context.Context, in *PutAzureRequest, opts ...grpc.CallOption) (*PutAzureResponse, error)
	DeleteAzure(ctx context.Context, in *DeleteAzureRequest, opts ...grpc.CallOption) (*Empty, error)
	// Rel Azure DataSource
	ListRelAzureDataSource(ctx context.Context, in *ListRelAzureDataSourceRequest, opts ...grpc.CallOption) (*ListRelAzureDataSourceResponse, error)
	GetRelAzureDataSource(ctx context.Context, in *GetRelAzureDataSourceRequest, opts ...grpc.CallOption) (*GetRelAzureDataSourceResponse, error)
	AttachRelAzureDataSource(ctx context.Context, in *AttachRelAzureDataSourceRequest, opts ...grpc.CallOption) (*AttachRelAzureDataSourceResponse, error)
	DetachRelAzureDataSource(ctx context.Context, in *DetachRelAzureDataSourceRequest, opts ...grpc.CallOption) (*Empty, error)
	// Scan
	InvokeScanAzure(ctx context.Context, in *InvokeScanAzureRequest, opts ...grpc.CallOption) (*Empty, error)
	InvokeScanAll(ctx context.Context, in *InvokeScanAllRequest, opts ...grpc.CallOption) (*Empty, error)
}

type azureServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAzureServiceClient(cc grpc.ClientConnInterface) AzureServiceClient {
	return &azureServiceClient{cc}
}

func (c *azureServiceClient) ListAzureDataSource(ctx context.Context, in *ListAzureDataSourceRequest, opts ...grpc.CallOption) (*ListAzureDataSourceResponse, error) {
	out := new(ListAzureDataSourceResponse)
	err := c.cc.Invoke(ctx, "/datasource.azure.AzureService/ListAzureDataSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *azureServiceClient) ListAzure(ctx context.Context, in *ListAzureRequest, opts ...grpc.CallOption) (*ListAzureResponse, error) {
	out := new(ListAzureResponse)
	err := c.cc.Invoke(ctx, "/datasource.azure.AzureService/ListAzure", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *azureServiceClient) GetAzure(ctx context.Context, in *GetAzureRequest, opts ...grpc.CallOption) (*GetAzureResponse, error) {
	out := new(GetAzureResponse)
	err := c.cc.Invoke(ctx, "/datasource.azure.AzureService/GetAzure", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *azureServiceClient) PutAzure(ctx context.Context, in *PutAzureRequest, opts ...grpc.CallOption) (*PutAzureResponse, error) {
	out := new(PutAzureResponse)
	err := c.cc.Invoke(ctx, "/datasource.azure.AzureService/PutAzure", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *azureServiceClient) DeleteAzure(ctx context.Context, in *DeleteAzureRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/datasource.azure.AzureService/DeleteAzure", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *azureServiceClient) ListRelAzureDataSource(ctx context.Context, in *ListRelAzureDataSourceRequest, opts ...grpc.CallOption) (*ListRelAzureDataSourceResponse, error) {
	out := new(ListRelAzureDataSourceResponse)
	err := c.cc.Invoke(ctx, "/datasource.azure.AzureService/ListRelAzureDataSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *azureServiceClient) GetRelAzureDataSource(ctx context.Context, in *GetRelAzureDataSourceRequest, opts ...grpc.CallOption) (*GetRelAzureDataSourceResponse, error) {
	out := new(GetRelAzureDataSourceResponse)
	err := c.cc.Invoke(ctx, "/datasource.azure.AzureService/GetRelAzureDataSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *azureServiceClient) AttachRelAzureDataSource(ctx context.Context, in *AttachRelAzureDataSourceRequest, opts ...grpc.CallOption) (*AttachRelAzureDataSourceResponse, error) {
	out := new(AttachRelAzureDataSourceResponse)
	err := c.cc.Invoke(ctx, "/datasource.azure.AzureService/AttachRelAzureDataSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *azureServiceClient) DetachRelAzureDataSource(ctx context.Context, in *DetachRelAzureDataSourceRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/datasource.azure.AzureService/DetachRelAzureDataSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *azureServiceClient) InvokeScanAzure(ctx context.Context, in *InvokeScanAzureRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/datasource.azure.AzureService/InvokeScanAzure", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *azureServiceClient) InvokeScanAll(ctx context.Context, in *InvokeScanAllRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/datasource.azure.AzureService/InvokeScanAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AzureServiceServer is the server API for AzureService service.
type AzureServiceServer interface {
	// Azure DataSource
	ListAzureDataSource(context.Context, *ListAzureDataSourceRequest) (*ListAzureDataSourceResponse, error)
	// Azure
	ListAzure(context.Context, *ListAzureRequest) (*ListAzureResponse, error)
	GetAzure(context.Context, *GetAzureRequest) (*GetAzureResponse, error)
	PutAzure(context.Context, *PutAzureRequest) (*PutAzureResponse, error)
	DeleteAzure(context.Context, *DeleteAzureRequest) (*Empty, error)
	// Rel Azure DataSource
	ListRelAzureDataSource(context.Context, *ListRelAzureDataSourceRequest) (*ListRelAzureDataSourceResponse, error)
	GetRelAzureDataSource(context.Context, *GetRelAzureDataSourceRequest) (*GetRelAzureDataSourceResponse, error)
	AttachRelAzureDataSource(context.Context, *AttachRelAzureDataSourceRequest) (*AttachRelAzureDataSourceResponse, error)
	DetachRelAzureDataSource(context.Context, *DetachRelAzureDataSourceRequest) (*Empty, error)
	// Scan
	InvokeScanAzure(context.Context, *InvokeScanAzureRequest) (*Empty, error)
	InvokeScanAll(context.Context, *InvokeScanAllRequest) (*Empty, error)
}

// UnimplementedAzureServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAzureServiceServer struct {
}

func (*UnimplementedAzureServiceServer) ListAzureDataSource(context.Context, *ListAzureDataSourceRequest) (*ListAzureDataSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAzureDataSource not implemented")
}
func (*UnimplementedAzureServiceServer) ListAzure(context.Context, *ListAzureRequest) (*ListAzureResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAzure not implemented")
}
func (*UnimplementedAzureServiceServer) GetAzure(context.Context, *GetAzureRequest) (*GetAzureResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAzure not implemented")
}
func (*UnimplementedAzureServiceServer) PutAzure(context.Context, *PutAzureRequest) (*PutAzureResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutAzure not implemented")
}
func (*UnimplementedAzureServiceServer) DeleteAzure(context.Context, *DeleteAzureRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAzure not implemented")
}
func (*UnimplementedAzureServiceServer) ListRelAzureDataSource(context.Context, *ListRelAzureDataSourceRequest) (*ListRelAzureDataSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRelAzureDataSource not implemented")
}
func (*UnimplementedAzureServiceServer) GetRelAzureDataSource(context.Context, *GetRelAzureDataSourceRequest) (*GetRelAzureDataSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRelAzureDataSource not implemented")
}
func (*UnimplementedAzureServiceServer) AttachRelAzureDataSource(context.Context, *AttachRelAzureDataSourceRequest) (*AttachRelAzureDataSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AttachRelAzureDataSource not implemented")
}
func (*UnimplementedAzureServiceServer) DetachRelAzureDataSource(context.Context, *DetachRelAzureDataSourceRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DetachRelAzureDataSource not implemented")
}
func (*UnimplementedAzureServiceServer) InvokeScanAzure(context.Context, *InvokeScanAzureRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InvokeScanAzure not implemented")
}
func (*UnimplementedAzureServiceServer) InvokeScanAll(context.Context, *InvokeScanAllRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InvokeScanAll not implemented")
}

func RegisterAzureServiceServer(s *grpc.Server, srv AzureServiceServer) {
	s.RegisterService(&_AzureService_serviceDesc, srv)
}

func _AzureService_ListAzureDataSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAzureDataSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AzureServiceServer).ListAzureDataSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datasource.azure.AzureService/ListAzureDataSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AzureServiceServer).ListAzureDataSource(ctx, req.(*ListAzureDataSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AzureService_ListAzure_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAzureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AzureServiceServer).ListAzure(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datasource.azure.AzureService/ListAzure",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AzureServiceServer).ListAzure(ctx, req.(*ListAzureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AzureService_GetAzure_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAzureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AzureServiceServer).GetAzure(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datasource.azure.AzureService/GetAzure",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AzureServiceServer).GetAzure(ctx, req.(*GetAzureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AzureService_PutAzure_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutAzureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AzureServiceServer).PutAzure(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datasource.azure.AzureService/PutAzure",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AzureServiceServer).PutAzure(ctx, req.(*PutAzureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AzureService_DeleteAzure_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAzureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AzureServiceServer).DeleteAzure(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datasource.azure.AzureService/DeleteAzure",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AzureServiceServer).DeleteAzure(ctx, req.(*DeleteAzureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AzureService_ListRelAzureDataSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRelAzureDataSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AzureServiceServer).ListRelAzureDataSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datasource.azure.AzureService/ListRelAzureDataSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AzureServiceServer).ListRelAzureDataSource(ctx, req.(*ListRelAzureDataSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AzureService_GetRelAzureDataSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRelAzureDataSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AzureServiceServer).GetRelAzureDataSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datasource.azure.AzureService/GetRelAzureDataSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AzureServiceServer).GetRelAzureDataSource(ctx, req.(*GetRelAzureDataSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AzureService_AttachRelAzureDataSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AttachRelAzureDataSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AzureServiceServer).AttachRelAzureDataSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datasource.azure.AzureService/AttachRelAzureDataSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AzureServiceServer).AttachRelAzureDataSource(ctx, req.(*AttachRelAzureDataSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AzureService_DetachRelAzureDataSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DetachRelAzureDataSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AzureServiceServer).DetachRelAzureDataSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datasource.azure.AzureService/DetachRelAzureDataSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AzureServiceServer).DetachRelAzureDataSource(ctx, req.(*DetachRelAzureDataSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AzureService_InvokeScanAzure_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InvokeScanAzureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AzureServiceServer).InvokeScanAzure(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datasource.azure.AzureService/InvokeScanAzure",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AzureServiceServer).InvokeScanAzure(ctx, req.(*InvokeScanAzureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AzureService_InvokeScanAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InvokeScanAllRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AzureServiceServer).InvokeScanAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/datasource.azure.AzureService/InvokeScanAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AzureServiceServer).InvokeScanAll(ctx, req.(*InvokeScanAllRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AzureService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "datasource.azure.AzureService",
	HandlerType: (*AzureServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListAzureDataSource",
			Handler:    _AzureService_ListAzureDataSource_Handler,
		},
		{
			MethodName: "ListAzure",
			Handler:    _AzureService_ListAzure_Handler,
		},
		{
			MethodName: "GetAzure",
			Handler:    _AzureService_GetAzure_Handler,
		},
		{
			MethodName: "PutAzure",
			Handler:    _AzureService_PutAzure_Handler,
		},
		{
			MethodName: "DeleteAzure",
			Handler:    _AzureService_DeleteAzure_Handler,
		},
		{
			MethodName: "ListRelAzureDataSource",
			Handler:    _AzureService_ListRelAzureDataSource_Handler,
		},
		{
			MethodName: "GetRelAzureDataSource",
			Handler:    _AzureService_GetRelAzureDataSource_Handler,
		},
		{
			MethodName: "AttachRelAzureDataSource",
			Handler:    _AzureService_AttachRelAzureDataSource_Handler,
		},
		{
			MethodName: "DetachRelAzureDataSource",
			Handler:    _AzureService_DetachRelAzureDataSource_Handler,
		},
		{
			MethodName: "InvokeScanAzure",
			Handler:    _AzureService_InvokeScanAzure_Handler,
		},
		{
			MethodName: "InvokeScanAll",
			Handler:    _AzureService_InvokeScanAll_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "azure/service.proto",
}
