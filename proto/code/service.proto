syntax = "proto3";

package datasource.code;
option go_package = "github.com/ca-risken/datasource-api/proto/code";

import "google/protobuf/empty.proto";
import "code/entity.proto";

service CodeService {
  // Code DataSource
  rpc ListDataSource(ListDataSourceRequest) returns (ListDataSourceResponse);

  // GitHubSetting
  rpc ListGitHubSetting(ListGitHubSettingRequest)
      returns (ListGitHubSettingResponse);
  rpc GetGitHubSetting(GetGitHubSettingRequest)
      returns (GetGitHubSettingResponse);
  rpc PutGitHubSetting(PutGitHubSettingRequest)
      returns (PutGitHubSettingResponse);
  rpc DeleteGitHubSetting(DeleteGitHubSettingRequest)
      returns (google.protobuf.Empty);

  // GitleaksSetting
  rpc PutGitleaksSetting(PutGitleaksSettingRequest)
      returns (PutGitleaksSettingResponse);
  rpc DeleteGitleaksSetting(DeleteGitleaksSettingRequest)
      returns (google.protobuf.Empty);

  // GitleaksCache
  rpc ListGitleaksCache(ListGitleaksCacheRequest)
      returns (ListGitleaksCacheResponse);
  rpc GetGitleaksCache(GetGitleaksCacheRequest)
      returns (GetGitleaksCacheResponse);
  rpc PutGitleaksCache(PutGitleaksCacheRequest)
      returns (PutGitleaksCacheResponse);

  // DependencySetting
  rpc PutDependencySetting(PutDependencySettingRequest)
      returns (PutDependencySettingResponse);
  rpc DeleteDependencySetting(DeleteDependencySettingRequest)
      returns (google.protobuf.Empty);

  // Scan
  rpc InvokeScanGitleaks(InvokeScanGitleaksRequest)
      returns (google.protobuf.Empty); // For ondeamnd
  rpc InvokeScanDependency(InvokeScanDependencyRequest)
      returns (google.protobuf.Empty); // For ondeamnd
  rpc InvokeScanAll(google.protobuf.Empty)
      returns (google.protobuf.Empty); // For scheduled
}

message ListDataSourceRequest {
  uint32 code_data_source_id = 1;
  string name = 2;
}

message ListDataSourceResponse { repeated CodeDataSource code_data_source = 1; }

message ListGitHubSettingRequest {
  uint32 project_id = 1;
  uint32 github_setting_id = 2;
}

message ListGitHubSettingResponse { repeated GitHubSetting github_setting = 1; }

message GetGitHubSettingRequest {
  uint32 project_id = 1;
  uint32 github_setting_id = 2;
}

message GetGitHubSettingResponse { GitHubSetting github_setting = 1; }

message PutGitHubSettingRequest {
  uint32 project_id = 1;
  GitHubSettingForUpsert github_setting = 2;
}

message PutGitHubSettingResponse { GitHubSetting github_setting = 1; }

message DeleteGitHubSettingRequest {
  uint32 project_id = 1;
  uint32 github_setting_id = 2;
}

message PutGitleaksSettingRequest {
  uint32 project_id = 1;
  GitleaksSettingForUpsert gitleaks_setting = 2;
}

message PutGitleaksSettingResponse { GitleaksSetting gitleaks_setting = 1; }

message DeleteGitleaksSettingRequest {
  uint32 project_id = 1;
  uint32 github_setting_id = 2;
}

message ListGitleaksCacheRequest {
  uint32 project_id = 1;
  uint32 github_setting_id = 2;
}

message ListGitleaksCacheResponse { repeated GitleaksCache gitleaks_cache = 1; }

message GetGitleaksCacheRequest {
  uint32 project_id = 1;
  uint32 github_setting_id = 2;
  string repository_full_name = 3;
}

message GetGitleaksCacheResponse { GitleaksCache gitleaks_cache = 1; }

message PutGitleaksCacheRequest {
  uint32 project_id = 1;
  GitleaksCacheForUpsert gitleaks_cache = 2;
}

message PutGitleaksCacheResponse { GitleaksCache gitleaks_cache = 1; }

message PutDependencySettingRequest {
  uint32 project_id = 1;
  DependencySettingForUpsert dependency_setting = 2;
}

message PutDependencySettingResponse {
  DependencySetting dependency_setting = 1;
}

message DeleteDependencySettingRequest {
  uint32 project_id = 1;
  uint32 github_setting_id = 2;
}

message InvokeScanGitleaksRequest {
  uint32 project_id = 1;
  uint32 github_setting_id = 2;
  bool scan_only = 3;
  bool full_scan = 4;
}

message InvokeScanDependencyRequest {
  uint32 project_id = 1;
  uint32 github_setting_id = 2;
  bool scan_only = 3;
}
